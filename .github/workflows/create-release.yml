name: Create Release

on:
  push:
    tags:
      - "v*.*.*-rc*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get current tag
        id: get-tag
        uses: devops-actions/action-get-tag@v1.0.3
        with:
          strip_v: true

      - name: Set the new version
        id: get-version
        run: |
          rctag=${{steps.get-tag.outputs.tag}}
          re='(v[0-9]+\.[0-9]+\.[0-9]+)-rc.?'
          if [[ $rctag =~ $re ]]; then
            rctag=${BASH_REMATCH[1]}
          fi
          echo "version=$rctag" >> "$GITHUB_OUTPUT"

      - name: Update package version
        uses: BellCubeDev/update-package-version-by-release-tag@v2
        with:
          version: ${{steps.get-version.outputs.version}}

      - name: Commit updated package
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: NPM package version updated
          branch: main
          commit_user_name: ${{ github.actor }}
          commit_user_email: ${{ github.actor }}@users.noreply.github.com

      - name: Move git tag to latest commit
        run: |
          git tag -d ${{steps.get-tag.outputs.tag}}
          git tag ${{steps.get-version.outputs.version}}
          git push origin --tags

      # - name: Create Github release (or pre-release)
